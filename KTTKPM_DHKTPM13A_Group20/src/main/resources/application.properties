server.port=8085
server.servlet.context-path=http://localhost:8085/
# ===============================
# THYMELEAF
# ===============================
spring.thymeleaf.cache=false
# ===============================
# DATASOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database
spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=HKVTravel_Group20

# MySQL username and password 
spring.datasource.username=sa
spring.datasource.password=025825273a
spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.dbcp.test-while-idle=true
spring.datasource.dbcp.validation-query=SELECT 1

# ===============================
# JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

spring.jpa.generate-ddl=true
# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=none

# Naming strategy
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect

###### Email Properties ######
spring.mail.host = smtp.gmailgun.org
spring.mail.port = 587
spring.mail.protocol = smtp
spring.mail.properties.mail.smtp.starttls.enable = true
spring.mail.username = hkvtravel@gmail.com
spring.mail.password = 025825273a
spring.mail.properties.mail.smtp.starttls.required = true
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.connectiontimeout = 5000
spring.mail.properties.mail.smtp.timeout = 5000
spring.mail.properties.mail.smtp.writetimeout = 5000

# Spring security query
#spring.security.basic.enabled=false
spring.queries.users-query=select email, matkhau, is_enabled from khachhang where email=?
spring.queries.roles-query=select u.email, r.name from khachhang u inner join khachhang_role ur on(u.makh=ur.makh) inner join role r on(ur.role_id=r.id) where u.email=?
spring.h2.console.enabled=true
